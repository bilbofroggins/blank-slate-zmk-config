#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen { zmk,physical-layout = &layout_ortho_4x12_2x2u; };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&lt 2 TAB  &kp Q      &kp W     &kp E     &kp R  &kp T      &kp Y       &kp U  &kp I           &kp O            &kp P     &kp BSPC
&mo 1      &kp A      &kp S     &kp D     &kp F  &kp G      &kp H       &kp J  &kp K           &kp L            &kp SQT   &kp RET
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V  &kp B      &kp N       &kp M  &kp COMMA       &kp DOT          &kp FSLH  &kp RSHFT
&mo 7      &kp LCTRL  &kp LALT  &kp LGUI  &mo 3  &kp SPACE  &kp ESCAPE  &mo 4  &kp LEFT_ARROW  &kp RIGHT_ARROW  &trans    &trans
            >;
        };

        CapsLock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans     &kp GRAVE     &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(PLUS)  &kp LS(DQT)    &trans
&trans  &trans  &trans  &trans  &trans  &trans     &kp LS(PIPE)  &kp LS(LPAR)  &kp LS(RPAR)  &kp EQUAL     &kp LS(COLON)  &trans
&trans  &trans  &trans  &trans  &trans  &kp LC(B)  &trans        &kp LBKT      &kp RBKT      &kp MINUS     &kp LS(UNDER)  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans        &kp X         &trans        &trans        &trans         &trans
            >;
        };

        Tab {
            bindings = <
&trans  &trans  &trans    &kp UP    &trans     &trans  &kp HOME  &kp LC(END)  &kp LC(HOME)  &kp END    &trans  &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &kp LEFT  &kp DOWN     &kp UP        &kp RIGHT  &trans  &trans
&trans  &trans  &trans    &trans    &trans     &trans  &trans    &trans       &trans        &trans     &trans  &trans
&trans  &trans  &trans    &trans    &trans     &trans  &trans    &trans       &trans        &trans     &trans  &trans
            >;
        };

        Numpad {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &kp LA(BSPC)
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N4  &kp N5  &kp N6  &kp SEMI  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N1  &kp N2  &kp N3  &kp BSLH  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp N0  &trans  &trans  &trans  &trans    &trans
            >;
        };

        Fn {
            bindings = <
&trans  &trans  &kp F7  &kp F8  &kp F9  &trans  &trans  &trans  &kp K_MUTE            &kp C_VOL_DN          &kp C_VOLUME_UP     &trans
&trans  &trans  &kp F4  &kp F5  &kp F6  &trans  &trans  &trans  &kp C_REWIND          &kp C_PLAY_PAUSE      &kp C_FAST_FORWARD  &trans
&trans  &trans  &kp F1  &kp F2  &kp F3  &trans  &trans  &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans              &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans                &trans              &trans
            >;
        };

        Macro {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Double {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Corner {
            bindings = <
&bootloader  &trans     &trans     &trans         &trans  &trans  &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans       &trans     &trans     &trans         &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans
&trans       &trans     &trans     &trans         &trans  &trans  &trans  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans       &mkp RCLK  &mkp LCLK  &kp C_AC_UNDO  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans
            >;
        };
    };
};
