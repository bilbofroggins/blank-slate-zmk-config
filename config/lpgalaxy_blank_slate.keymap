#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BT(n) BT_SEL n

/ {
    chosen { zmk,physical-layout = &layout_ortho_4x12_2x2u; };

    macros {
        Name: Name {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(P) &kp A &kp T &kp SPACE &kp LS(C) &kp U &kp N &kp N &kp I &kp F &kp F>;
            label = "NAME";
        };

        Email: Email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp J &kp C &kp F &kp I &kp F &kp A &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        VimSearch: VimSearch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp S &kp FSLH>;
            label = "VIMSEARCH";
        };

        QuoteSurround: QuoteSurround {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp S &kp FSLH &kp BSLH &kp BSLH &kp PRCNT &kp LS(V) &kp BSLH &kp BSLH &kp LPAR &kp DOT &kp STAR &kp BSLH &kp BSLH &kp RPAR &kp BSLH &kp BSLH &kp PRCNT &kp LS(V) &kp BSLH &kp BSLH &kp LPAR &kp DOT &kp BSLH &kp BSLH &kp RPAR &kp FSLH &kp BSLH &kp DQT &kp BSLH &kp BSLH &kp N1 &kp BSLH &kp BSLH &kp N2 &kp BSLH &kp DQT &kp FSLH>;
            label = "QUOTESURROUND";
        };
    };

    behaviors {
        QuoteColon: QuoteColon {
            compatible = "zmk,behavior-mod-morph";
            label = "QUOTECOLON";
            bindings = <&kp SINGLE_QUOTE>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        osmmo: osmmo {
            compatible = "zmk,behavior-hold-tap";
            label = "OSMMO";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        Capword {
            bindings = <&caps_word>;
            key-positions = <24 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&lt 2 TAB  &kp Q             &kp W                 &kp E             &kp R                &kp T      &kp Y       &kp U         &kp I      &kp O    &kp P        &kp BSPC
&mo 1      &kp A             &kp S                 &kp D             &kp F                &kp G      &kp H       &kp J         &kp K      &kp L    &QuoteColon  &kp RET
&kp LSHFT  &kp Z             &kp X                 &kp C             &kp V                &kp B      &kp N       &kp M         &kp COMMA  &kp DOT  &kp FSLH     &kp RSHFT
&mo 7      &kp LEFT_CONTROL  &kp LS(LC(LG(LALT)))  &kp LEFT_COMMAND  &osmmo 3 LEFT_SHIFT  &kp SPACE  &kp ESCAPE  &kp LEFT_ALT  &mo 5      &mo 4    &trans       &trans
            >;
        };

        CapsLock {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans     &trans        &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(PLUS)  &kp LS(DQT)    &trans
&trans  &trans  &trans  &trans  &trans  &trans     &kp LS(PIPE)  &kp LS(LPAR)  &kp LS(RPAR)  &kp EQUAL     &kp LS(COLON)  &kp LS(RETURN)
&trans  &trans  &trans  &trans  &trans  &kp LC(B)  &trans        &kp LBKT      &kp RBKT      &kp MINUS     &kp BACKSLASH  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans        &trans        &trans        &trans        &trans         &trans
            >;
        };

        Tab {
            bindings = <
&trans  &trans  &trans    &kp UP    &trans     &trans  &kp HOME  &kp LC(END)  &kp LC(HOME)  &kp END    &trans  &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &kp LEFT  &kp DOWN     &kp UP        &kp RIGHT  &trans  &trans
&trans  &trans  &trans    &trans    &trans     &trans  &trans    &trans       &trans        &trans     &trans  &trans
&trans  &trans  &trans    &trans    &trans     &trans  &trans    &trans       &trans        &trans     &trans  &trans
            >;
        };

        Numpad {
            bindings = <
&kp TILDE  &kp N1     &kp N2         &kp N3             &kp N4    &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0          &trans
&trans     &kp GRAVE  &kp LESS_THAN  &kp DOUBLE_QUOTES  &kp PIPE  &kp GREATER_THAN  &trans  &kp N4  &kp N5  &kp N6  &kp SEMI        &trans
&trans     &trans     &trans         &trans             &trans    &trans            &trans  &kp N1  &kp N2  &kp N3  &kp UNDERSCORE  &trans
&trans     &trans     &trans         &trans             &trans    &trans            &kp N0  &trans  &trans  &trans  &trans          &trans
            >;
        };

        RCorner {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_REWIND  &kp C_PP           &kp C_FAST_FORWARD
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans             &trans
            >;
        };

        Macro {
            bindings = <
&trans  &trans  &QuoteSurround  &Email  &VimSearch  &trans  &trans  &trans  &trans  &trans          &kp UP_ARROW  &trans
&trans  &trans  &trans          &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW
&trans  &trans  &trans          &trans  &trans      &trans  &Name   &trans  &trans  &trans          &trans        &trans
&trans  &trans  &trans          &trans  &trans      &trans  &trans  &trans  &trans  &trans          &trans        &trans
            >;
        };

        Double {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        LCorner {
            bindings = <
&bootloader  &trans     &trans     &trans     &trans  &trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR
&trans       &trans     &trans     &trans     &trans  &trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &trans
&trans       &trans     &trans     &trans     &trans  &trans  &trans         &trans         &trans         &trans         &trans         &trans
&trans       &mkp RCLK  &mkp LCLK  &kp LG(Z)  &trans  &trans  &trans         &trans         &trans         &trans         &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Double {
            if-layers = <1 3>;
            then-layer = <6>;
        };
    };
};
